; UZI mnemonics for memory addresses etc

U_DATA			.equ	0xF000	; (this is struct u_data from kernel.h)
U_DATA__TOTALSIZE	.equ	0x300	; 256+256+256 bytes.
Z80_TYPE		.equ	0	; just an old good Z80
USE_FANCY_MONITOR	.equ	1	; disabling this saves around approx 0.5KB

PROGBASE		.equ	0x0000
PROGLOAD		.equ	0x0100

; Zeta SBC V2 mnemonics for I/O ports etc

CONSOLE_RATE		.equ	38400

CPU_CLOCK_KHZ		.equ	7372

; VFD Debugging
VFD_C   .EQU    0     ; control register
VFD_D   .EQU    1     ; data register

; Z80 CTC ports
CTC_CH0		.equ	0x20	; CTC channel 0 and interrupt vector
CTC_CH1		.equ	0x21	; CTC channel 1 (periodic interrupts)
CTC_CH2		.equ	0x22	; CTC channel 2 (UART interrupt)
CTC_CH3		.equ	0x23	; CTC channel 3 (PPI interrupt)

; 37C65 FDC ports
FDC_CCR		.equ	0x48	; Configuration Control Register (W/O)
FDC_MSR		.equ	0x50	; 8272 Main Status Register (R/O)
FDC_DATA	.equ	0x51	; 8272 Data Port (R/W)
FDC_DOR		.equ	0x58	; Digital Output Register (W/O)
FDC_TC		.equ	0x58	; Pulse terminal count (R/O)

; MMU Ports
MPGSEL_0	.equ	0x78	; Bank_0 page select register (W/O)
MPGSEL_1	.equ	0x79	; Bank_1 page select register (W/O)
MPGSEL_2	.equ	0x7A	; Bank_2 page select register (W/O)
MPGSEL_3	.equ	0x7B	; Bank_3 page select register (W/O)
MPGENA		.equ	0x7C	; memory paging enable register, bit 0 (W/O)

; Define which serial device to use
;    NOTE: Make sure this agrees with CONFIG_SIO and CONFIG_ACIA
;          in config.h
CONFIG_SIO      .equ   1
CONFIG_ACIA     .equ   0

